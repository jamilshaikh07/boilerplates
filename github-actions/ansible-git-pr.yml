name: proxmox add vm and raise PR

on:
  workflow_dispatch:
    inputs:
      vm_name:
        description: 'Name of the VM'
        required: true
        default: 'new-vm'
      vm_memory:
        description: 'Memory for the VM (in MB)'
        required: true
        default: '1024'
      vm_cores:
        description: 'Number of cores for the VM'
        required: true
        default: '1'
      vm_ip:
        description: 'IP address of the VM'
        required: true
        default: '10.10.0.94'
      vm_template:
        description: 'Template name for the VM'
        required: true
        default: 'ubuntu-2204-k8s'

jobs:
  ansible_add_vm:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Run Ansible Playbook to add VM
      run: ansible-playbook add_vm.yaml -i "localhost," --extra-vars "vm_name=${{ github.event.inputs.vm_name }} vm_memory=${{ github.event.inputs.vm_memory }} vm_cores=${{ github.event.inputs.vm_cores }} vm_ip=${{ github.event.inputs.vm_ip }} vm_template=${{ github.event.inputs.vm_template }}"
      working-directory: homelab

    - name: Create a unique branch name
      id: branch_name
      run: echo "::set-output name=branch::new-vm-branch-${{ github.run_id }}"

    - name: Commit and Push Terraform Changes
      run: |
        git config --global user.name ""
        git config --global user.email ""
        git checkout -b ${{ steps.branch_name.outputs.branch }}
        git add .
        git commit -m "Added new VM to Terraform configuration"
        git push origin ${{ steps.branch_name.outputs.branch }}

    - name: Install GitHub CLI
      run: sudo apt-get install gh -y

    - name: Authenticate GitHub CLI
      run: echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token

    - name: Create Pull Request
      run: gh pr create -B main -H ${{ steps.branch_name.outputs.branch }} --title 'Add new VM via Ansible' --body 'This PR adds a new VM to the Terraform configuration.'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
